@model PaginatedList<Larram.Models.Order>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var status = Context.Request.Query["status"];

    var all = "text-dark";
    var inprocess = "text-dark";
    var completed = "text-dark";
    var rejected = "text-dark";

    switch (status)
    {
        case "inprocess":
            inprocess = "bg-dark active text-white";
            break;
        case "completed":
            completed = "bg-dark active text-white";
            break;
        case "rejected":
            rejected = "bg-dark active text-white";
            break;
        default:
            all = "bg-dark active text-white";
            break;
    }
}

<div class="container p-5">
    <div class="container mb-4 ml-0 p-0">
        <h1 class="Roboto text-center m-0" style="font-size:200%;"><b>ZARZĄDZANIE ZAMÓWIENIAMI</b></h1>
        <hr class="m-0" />
        <div class="d-flex justify-content-between p-0">
            <div class="justify-content-start mt-3 Roboto" style="width:20%; font-size:70%; display:inline;">
                <form asp-controller="Color" asp-action="Index" method="get" style="display:inline;">
                    <p>
                        <input class="form-control Roboto" type="text" value="" name="search" placeholder="Szukaj..." style="width:70%; border-radius:0;" />
                    </p>
                    <a asp-action="Index" class="text-dark" style="font-size:120%;">Wyczyść filtry</a>
                </form>
            </div>
            <div class="text-light button-managment text-light Roboto ml-0 pt-0 pr-0 mr-0 pl-0 justify-content-end" style="font-size:100%; width:auto;">
                <ul class="list-group list-group-horizontal-sm" style="list-style-type: none;">
                    <a  class="text-light" asp-controller="Order"
                       asp-action="Index" asp-route-status="inprocess">
                        <li class="p-2 border border-secondary @inprocess">In Process</li>
                    </a>
                    <a class="text-light" asp-controller="Order"
                       asp-action="Index" asp-route-status="completed">
                        <li class="p-2 border border-secondary @completed">Completed</li>
                    </a>
                    <a class="text-light" asp-controller="Order"
                       asp-action="Index" asp-route-status="rejected">
                        <li class="p-2 border border-secondary @rejected">Rejected</li>
                    </a>
                    <a class="text-light" asp-controller="Order"
                       asp-action="Index" asp-route-status="all">
                        <li class="p-2 border border-secondary @all">All</li>
                    </a>
                </ul>
            </div>
        </div>
        <div id="view-all">
            <partial name="_ViewAll" />
        </div>
        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }
        <div class="d-flex justify-content-center">
            <a asp-action="Index"
               asp-route-orderBy="@ViewBag.CurrentOrderBy"
               asp-route-page="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewBag.CurrentFilter"
               class="btn btn-default p-1 text-light button-managment bg-dark Roboto @prevDisabled" style="width:15%; border-radius:0; font-size:110%;">
                <i style="font-size:21px" data-feather="arrow-left"></i> Poprzednia
            </a>
            <a asp-action="Index"
               asp-route-orderBy="@ViewBag.CurrentOrderBy"
               asp-route-page="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewBag.CurrentFilter"
               class="btn btn-default p-1 text-light button-managment bg-dark Roboto @nextDisabled" style="width:15%;  border-radius:0; font-size:110%;">
                Następna <i style="font-size:21px" data-feather="arrow-right"></i>
            </a>
        </div>
    </div>
</div>

@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

